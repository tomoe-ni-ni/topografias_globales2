generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Cliente {
  ID_cliente          Int         @id @default(autoincrement())
  nombre              String
  apellido            String
  nombre_departamento String
  nombre_provincia    String
  documentos          Documento[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Proyecto {
  ID_proyecto Int         @id @default(autoincrement())
  nombre      String
  descripcion String
  documentos  Documento[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Estado_documento {
  ID_estado   Int                    @id @default(autoincrement())
  estado      String
  documentos  Documento[]
  historiales Historial_documentos[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Area {
  ID_area    Int         @id @default(autoincrement())
  nombre     String
  documentos Documento[]
  usuarios   Usuario[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Usuario {
  ID_usuario    Int                    @id @default(autoincrement())
  nombre        String
  apellido      String
  correo        String                 @unique
  contrasena    String
  rol           String
  permisos      String[]               @default(["crear", "leer", "borrar", "editar"])
  estado        String                 @default("activo")
  fecha_ingreso DateTime               @default(now())
  ID_area       Int
  documentos    Documento[]
  historiales   Historial_documentos[]
  area          Area                   @relation(fields: [ID_area], references: [ID_area])

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Documento {
  ID_documento        Int                    @id @default(autoincrement())
  nombre_documento    String
  tipo_documento      String
  archivo             String
  descripcion         String
  folio               String                 @db.VarChar(50)
  ID_cliente          Int
  ID_proyecto         Int
  ID_estado_documento Int
  ID_area             Int
  ID_usuario          Int
  usuario             Usuario                @relation(fields: [ID_usuario], references: [ID_usuario])
  area                Area                   @relation(fields: [ID_area], references: [ID_area])
  cliente             Cliente                @relation(fields: [ID_cliente], references: [ID_cliente])
  estado              Estado_documento       @relation(fields: [ID_estado_documento], references: [ID_estado])
  proyecto            Proyecto               @relation(fields: [ID_proyecto], references: [ID_proyecto])
  historiales         Historial_documentos[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Historial_documentos {
  ID_historial        Int              @id @default(autoincrement())
  fecha               DateTime
  ID_documento        Int
  ID_usuario          Int
  ID_estado_documento Int
  documento_historial String
  descripcion         String
  documento           Documento        @relation(fields: [ID_documento], references: [ID_documento])
  estado              Estado_documento @relation(fields: [ID_estado_documento], references: [ID_estado])
  usuario             Usuario          @relation(fields: [ID_usuario], references: [ID_usuario])

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}
